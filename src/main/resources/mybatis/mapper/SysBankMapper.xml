<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sakura.tm.dao.mapper.SysBankMapper">
  <resultMap id="BaseResultMap" type="com.sakura.tm.common.entity.SysBank">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="bank_no" jdbcType="VARCHAR" property="bankNo" />
    <result column="banK_card" jdbcType="VARCHAR" property="bankCard" />
    <result column="bank_card_password" jdbcType="VARCHAR" property="bankCardPassword" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="bank_money" jdbcType="DECIMAL" property="bankMoney" />
    <result column="bank_card_type" jdbcType="INTEGER" property="bankCardType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, bank_no, banK_card, bank_card_password, user_id, bank_money, bank_card_type, 
    create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.sakura.tm.common.entity.example.SysBankExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_bank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_bank
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_bank
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sakura.tm.common.entity.example.SysBankExample">
    delete from sys_bank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sakura.tm.common.entity.SysBank">
    insert into sys_bank (id, bank_no, banK_card, 
      bank_card_password, user_id, bank_money, 
      bank_card_type, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{bankNo,jdbcType=VARCHAR}, #{bankCard,jdbcType=VARCHAR}, 
      #{bankCardPassword,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{bankMoney,jdbcType=DECIMAL}, 
      #{bankCardType,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sakura.tm.common.entity.SysBank">
    insert into sys_bank
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bankNo != null">
        bank_no,
      </if>
      <if test="bankCard != null">
        banK_card,
      </if>
      <if test="bankCardPassword != null">
        bank_card_password,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="bankMoney != null">
        bank_money,
      </if>
      <if test="bankCardType != null">
        bank_card_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bankNo != null">
        #{bankNo,jdbcType=VARCHAR},
      </if>
      <if test="bankCard != null">
        #{bankCard,jdbcType=VARCHAR},
      </if>
      <if test="bankCardPassword != null">
        #{bankCardPassword,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="bankMoney != null">
        #{bankMoney,jdbcType=DECIMAL},
      </if>
      <if test="bankCardType != null">
        #{bankCardType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sakura.tm.common.entity.example.SysBankExample" resultType="java.lang.Long">
    select count(*) from sys_bank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_bank
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.bankNo != null">
        bank_no = #{record.bankNo,jdbcType=VARCHAR},
      </if>
      <if test="record.bankCard != null">
        banK_card = #{record.bankCard,jdbcType=VARCHAR},
      </if>
      <if test="record.bankCardPassword != null">
        bank_card_password = #{record.bankCardPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.bankMoney != null">
        bank_money = #{record.bankMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.bankCardType != null">
        bank_card_type = #{record.bankCardType,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_bank
    set id = #{record.id,jdbcType=INTEGER},
      bank_no = #{record.bankNo,jdbcType=VARCHAR},
      banK_card = #{record.bankCard,jdbcType=VARCHAR},
      bank_card_password = #{record.bankCardPassword,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      bank_money = #{record.bankMoney,jdbcType=DECIMAL},
      bank_card_type = #{record.bankCardType,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sakura.tm.common.entity.SysBank">
    update sys_bank
    <set>
      <if test="bankNo != null">
        bank_no = #{bankNo,jdbcType=VARCHAR},
      </if>
      <if test="bankCard != null">
        banK_card = #{bankCard,jdbcType=VARCHAR},
      </if>
      <if test="bankCardPassword != null">
        bank_card_password = #{bankCardPassword,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="bankMoney != null">
        bank_money = #{bankMoney,jdbcType=DECIMAL},
      </if>
      <if test="bankCardType != null">
        bank_card_type = #{bankCardType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sakura.tm.common.entity.SysBank">
    update sys_bank
    set bank_no = #{bankNo,jdbcType=VARCHAR},
      banK_card = #{bankCard,jdbcType=VARCHAR},
      bank_card_password = #{bankCardPassword,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      bank_money = #{bankMoney,jdbcType=DECIMAL},
      bank_card_type = #{bankCardType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.sakura.tm.common.entity.SysBank">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="bank_no" jdbcType="VARCHAR" property="bankNo" />
    <result column="banK_card" jdbcType="VARCHAR" property="bankCard" />
    <result column="bank_card_password" jdbcType="VARCHAR" property="bankCardPassword" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="bank_money" jdbcType="DECIMAL" property="bankMoney" />
    <result column="bank_card_type" jdbcType="INTEGER" property="bankCardType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, bank_no, banK_card, bank_card_password, user_id, bank_money, bank_card_type, 
    create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.sakura.tm.common.entity.example.SysBankExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_bank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_bank
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_bank
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sakura.tm.common.entity.example.SysBankExample">
    delete from sys_bank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sakura.tm.common.entity.SysBank">
    insert into sys_bank (id, bank_no, banK_card, 
      bank_card_password, user_id, bank_money, 
      bank_card_type, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{bankNo,jdbcType=VARCHAR}, #{bankCard,jdbcType=VARCHAR}, 
      #{bankCardPassword,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{bankMoney,jdbcType=DECIMAL}, 
      #{bankCardType,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sakura.tm.common.entity.SysBank">
    insert into sys_bank
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bankNo != null">
        bank_no,
      </if>
      <if test="bankCard != null">
        banK_card,
      </if>
      <if test="bankCardPassword != null">
        bank_card_password,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="bankMoney != null">
        bank_money,
      </if>
      <if test="bankCardType != null">
        bank_card_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bankNo != null">
        #{bankNo,jdbcType=VARCHAR},
      </if>
      <if test="bankCard != null">
        #{bankCard,jdbcType=VARCHAR},
      </if>
      <if test="bankCardPassword != null">
        #{bankCardPassword,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="bankMoney != null">
        #{bankMoney,jdbcType=DECIMAL},
      </if>
      <if test="bankCardType != null">
        #{bankCardType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sakura.tm.common.entity.example.SysBankExample" resultType="java.lang.Long">
    select count(*) from sys_bank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_bank
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.bankNo != null">
        bank_no = #{record.bankNo,jdbcType=VARCHAR},
      </if>
      <if test="record.bankCard != null">
        banK_card = #{record.bankCard,jdbcType=VARCHAR},
      </if>
      <if test="record.bankCardPassword != null">
        bank_card_password = #{record.bankCardPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.bankMoney != null">
        bank_money = #{record.bankMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.bankCardType != null">
        bank_card_type = #{record.bankCardType,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_bank
    set id = #{record.id,jdbcType=INTEGER},
      bank_no = #{record.bankNo,jdbcType=VARCHAR},
      banK_card = #{record.bankCard,jdbcType=VARCHAR},
      bank_card_password = #{record.bankCardPassword,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      bank_money = #{record.bankMoney,jdbcType=DECIMAL},
      bank_card_type = #{record.bankCardType,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sakura.tm.common.entity.SysBank">
    update sys_bank
    <set>
      <if test="bankNo != null">
        bank_no = #{bankNo,jdbcType=VARCHAR},
      </if>
      <if test="bankCard != null">
        banK_card = #{bankCard,jdbcType=VARCHAR},
      </if>
      <if test="bankCardPassword != null">
        bank_card_password = #{bankCardPassword,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="bankMoney != null">
        bank_money = #{bankMoney,jdbcType=DECIMAL},
      </if>
      <if test="bankCardType != null">
        bank_card_type = #{bankCardType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sakura.tm.common.entity.SysBank">
    update sys_bank
    set bank_no = #{bankNo,jdbcType=VARCHAR},
      banK_card = #{bankCard,jdbcType=VARCHAR},
      bank_card_password = #{bankCardPassword,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      bank_money = #{bankMoney,jdbcType=DECIMAL},
      bank_card_type = #{bankCardType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>